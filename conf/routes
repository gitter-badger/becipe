# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           						controllers.Application.index

# Recipe
# POST	/recipe/by											controllers.RecipeController.by(categories: List[String])
# GET		/recipe/add											controllers.RecipeController.add
# POST	/recipe/submitRecipe								controllers.RecipeController.submitRecipe
# GET		/recipe/edit/:id									controllers.RecipeController.edit(id: String)

# API
# get play 2.2 for supporting dynamic part in the middle
GET		/api/0.1/recipes									controllers.RecipeController.recipes(query: String ?= "", filter: String ?= "", userid: String ?= "", level: String ?= "")
GET		/api/0.1/recipe/random/:n							controllers.RecipeController.getRandomRecipes(n: Int)
GET		/api/0.1/recipe/recent/:n							controllers.RecipeController.getRecentRecipes(n: Int)
POST	/api/0.1/recipe										controllers.RecipeController.addRecipe
# might become partial update in the future
PUT		/api/0.1/recipe/:id									controllers.RecipeController.updateRecipe(id: String, attrNames: Option[String] ?= None)
POST	/api/0.1/recipe/:id/photos							controllers.RecipeController.uploadRecipePhotos(id: String)
GET		/api/0.1/recipe/checkRequestStatus/:requestHandle	controllers.RecipeController.checkRequestStatus(requestHandle: String)
DELETE  /api/0.1/recipe/:id/photos							controllers.RecipeController.deleteRecipePhotos(id: String)
GET		/api/0.1/recipe/:id									controllers.RecipeController.getRecipeById(id: String)
GET		/recipe/:id											controllers.RecipeController.getFacebookRecipeById(id: String)

#DISQUS
GET		/disqus/recipe/:id									controllers.DisqusController.getRecipeById(id: String)
GET		/disqus/blog/:id									controllers.DisqusController.getBlogEntryById(id: String)
GET		/disqus/login										controllers.DisqusController.login

# User
POST	/api/0.1/signup/add									controllers.UserController.newSignup
GET 	/api/0.1/signup/token/:token						controllers.UserController.getSignupAsJson(token: String)
GET 	/api/0.1/user/token/:token							controllers.UserController.getUserAsJson(token: String)
POST	/api/0.1/signup/token/:token						controllers.UserController.createUser(token: String)
POST	/api/0.1/user/token/:token							controllers.UserController.resetPassword(token: String)
GET		/signup/confirm/:token								controllers.UserController.redirectToSignupConfirm(token: String)
GET		/resetpassw/:token									controllers.UserController.redirectToResetPassw(token: String)
POST	/api/0.1/login										controllers.UserController.login
POST	/api/0.1/logout										controllers.UserController.logout
POST	/api/0.1/forgotPassword								controllers.UserController.forgotPassword
GET		/api/0.1/user/:id									controllers.UserController.user(id: String)
PUT     /api/0.1/user/recipe/like							controllers.UserController.likeRecipe
PUT     /api/0.1/user/blog/like								controllers.UserController.likeBlogEntry

POST	/api/0.1/email/add									controllers.UserController.saveEmail

# Blog
GET		/api/0.1/blog/recent/:n								controllers.BlogController.recentBlogEntries(n: Int)
GET		/api/0.1/blog/:id									controllers.BlogController.getBlogEntryById(id: String)
GET		/api/0.1/blog										controllers.BlogController.blogEntries(tag: Option[String])
GET		/blog/:id											controllers.BlogController.getFacebookBlogEntryById(id: String)

# Admin
POST	/api/0.1/admin/resetAllZeroTokens					controllers.AdminController.resetAllZeroTokens	
GET		/api/0.1/admin/getAllSignupsForLast					controllers.AdminController.getAllSignupsForLast(days: Int)

# Javascript routing
GET     /assets/javascripts/routes          				controllers.Application.javascriptRoutes

# Map static resources from the /public folder 
# to the /assets URL path
GET     /assets/*file               						controllers.Assets.at(path="/public", file)
GET     /*file												controllers.Assets.at(path="/public", file)
GET     /webjars/*file              						controllers.WebJarAssets.at(file)
